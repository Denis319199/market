server.port = 8081

# Possible profiles:
#   Main profile (must be the only specified profile):
#   * prod - runs all systems such as security, work with auth-service etc.;
#
#   Security profiles (must be specified if prod is not specified):
#   * secured         - enables security for all urls
#   * unsecured-admin - disables any security for urls, that is, jwtFilter will pass all requests and
#                       authorize them as admin's request;
#   * unsecured-user  - disables any security for urls, that is, jwtFilter will pass all requests and
#                       authorize them as user's request;
#
#   Auth-service connectivity (enabled by default):
#   * auth-service-disabled - disables all requests to auth-service.
spring.profiles.active=unsecured-admin, auth-service-disabled

spring.mvc.servlet.path = /api

spring.datasource.url = jdbc:postgresql://localhost:5432/market
spring.datasource.username = postgres
spring.datasource.password = root
spring.datasource.driver-class-name = org.postgresql.Driver

springdoc.swagger-ui.doc-expansion=none
springdoc.swagger-ui.tags-sorter=alpha
springdoc.swagger-ui.operations-sorter=alpha

spring.flyway.url = jdbc:postgresql://localhost:5432/market
spring.flyway.schemas = public
spring.flyway.user = postgres
spring.flyway.password = root

spring.jpa.hibernate.ddl-auto = validate
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

logging.level.org.hibernate.type.descriptor.sql=trace
logging.level.org.hibernate.sql=trace

security.jwt.secret = secretsecretsecretsecretsecretsecret
security.jwt.tokenType = Bearer
security.jwt.header = Authorization
security.jwt.accessTokenName = access_token

security.jwt.claims.token-type=token_type
security.jwt.claims.user-id=user_id
security.jwt.claims.role=role

security.jwt.service-request.subject=SERVICE_REQUEST
security.jwt.service-request.user-id=0
security.jwt.service-request.role=ROLE_ADMIN
security.jwt.service-request.expiration-time=600

security.unsecured.endpoints=
security.unsecured.get-method-endpoints=
security.unsecured.swagger-paths=/**/api-docs/**, \
                                 /**/swagger-ui/**, \
                                 /**/swagger-ui/index.html, \
                                 /**/swagger-resources/**, \
                                 /**/webjars/**

security.cors.origins=http://localhost:4200
security.cors.methods=GET, PUT, POST, DELETE, PATCH
security.cors.headers=Content-Type, Authorization
security.cors.uri=/**

swagger.title=Market Service
swagger.description=Market Service provides user with ability to purchase and sell games items
swagger.version=1.0
swagger.base-package=com.db

exception-field = error

spring.servlet.multipart.max-file-size=256KB
spring.servlet.multipart.max-request-size=256KB


